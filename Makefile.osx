#!/bin/sh

SDK=~/Desktop/amanithvg-sdk

all:	app

libwee.dylib: src/shapes.c src/platform_osx.m
	# Build libwee.
	clang \
		src/shapes.c \
		src/platform_osx.m \
		-g \
		-I ${SDK}/include \
		-L ${SDK}/lib/macosx/ub/gle/standalone \
		-lAmanithVG \
		-I /usr/local/include \
		-L /usr/local/lib \
		-ljpeg \
		-I src \
		-lobjc \
		-framework Cocoa \
		-framework CoreVideo \
		-framework CoreFoundation \
		-framework QuartzCore \
		-framework OpenGL \
		-shared \
		-fpic \
		-o libwee.dylib
	install_name_tool -id "@rpath/../dylibs/libwee.dylib" libwee.dylib 

app: libwee.dylib
	# Build the .app bundle.
	mkdir -p Demo.app/Contents/MacOS
	mkdir -p Demo.app/Contents/dylibs
	mkdir -p Demo.app/Contents/Resources
	cp resources/osx/Info.plist Demo.app/Contents
	cp resources/osx/tutorial.icns Demo.app/Contents/Resources
	cp ${SDK}/lib/macosx/ub/gle/standalone/libAmanithVG.4.dylib Demo.app/Contents/dylibs
	cp libwee.dylib Demo.app/Contents/dylibs/libwee.dylib
	# Build and install the main (Rust) binary.
	cd lib-weekit; cargo build --example hello
	cp lib-weekit/target/debug/examples/hello Demo.app/Contents/MacOS/Demo
	install_name_tool -add_rpath "@executable_path/../dylibs" Demo.app/Contents/MacOS/Demo

clean:
	cd lib-weekit; cargo clean
	cd lib-svgkit; cargo clean
	rm -rf Demo.app *.dSYM libwee.dylib
