#!/bin/sh

SDK=~/Desktop/amanithvg-sdk

APP=Demo.app

EXAMPLE=rocks

all:	app

libs:	lib/libAmanithVG.4.dylib lib/libplatform.dylib

lib/libAmanithVG.4.dylib: ${SDK}/lib/macosx/ub/gle/standalone/libAmanithVG.4.dylib
	mkdir -p lib
	cp ${SDK}/lib/macosx/ub/gle/standalone/libAmanithVG.4.dylib lib

lib/libplatform.dylib: platform/common/shapes.c platform/osx/platform.m
	mkdir -p lib
	# Build libplatform.
	clang \
		platform/common/shapes.c \
		platform/osx/platform.m \
		-I platform/osx \
		-g \
		-I ${SDK}/include \
		-L ${SDK}/lib/macosx/ub/gle/standalone \
		-lAmanithVG \
		-I /usr/local/include \
		-L /usr/local/lib \
		-ljpeg \
		-I src \
		-lobjc \
		-framework Cocoa \
		-framework CoreVideo \
		-framework CoreFoundation \
		-framework QuartzCore \
		-framework OpenGL \
		-shared \
		-fpic \
		-o lib/libplatform.dylib
	install_name_tool -id "@rpath/../dylibs/libplatform.dylib" lib/libplatform.dylib 

app: libs
	# Build the .app bundle.
	mkdir -p ${APP}/Contents/MacOS
	mkdir -p ${APP}/Contents/dylibs
	mkdir -p ${APP}/Contents/Resources
	cp platform/osx/Info.plist ${APP}/Contents
	cp platform/osx/tutorial.icns ${APP}/Contents/Resources
	cp lib/*.dylib ${APP}/Contents/dylibs
	# Build and install the main (Rust) binary.
	cd lib-weekit; cargo fmt; cargo build --example ${EXAMPLE}
	cp lib-weekit/target/debug/examples/${EXAMPLE} ${APP}/Contents/MacOS/Demo
	install_name_tool -add_rpath "@executable_path/../dylibs" ${APP}/Contents/MacOS/Demo

clean:
	cd lib-weekit; cargo clean
	cd lib-svgkit; cargo clean
	rm -rf ${APP} lib
